Sqlite3 hotelli.db

//Create tables and indexes

CREATE TABLE Huone(
tyyppi VARCHAR(20),
numero NUMERIC(3,0) PRIMARY KEY,
hinta FLOAT
);
CREATE TABLE Lisavarusteet(
id INTEGER PRIMARY KEY,
nimi VARCHAR(100)
);
CREATE TABLE Varaus(
id INTEGER PRIMARY KEY,
aloitus DATE,
lopetus DATE,
asiakasnimi VARCHAR(79),
asiakaspuh INTEGER,
asiakassposti VARCHAR(100)
);
CREATE TABLE VL(
varaus_id INTEGER,
lisavarusteet_id INTEGER,
FOREIGN KEY(varaus_id) REFERENCES Varaus(id),
FOREIGN KEY(lisavarusteet_id) REFERENCES Lisavarusteet(id)
);
CREATE TABLE HV(
varaus_id INTEGER,
huone_numero NUMERIC(3,0),
FOREIGN KEY (varaus_id) REFERENCES Varaus(id),
FOREIGN KEY(huone_numero) REFERENCES Huone(numero)
);
CREATE INDEX InLisavarusteetNimi ON Lisavarusteet(nimi);
CREATE INDEX INHuoneTyyppi ON Huone(tyyppi);

//Add rooms

INSERT INTO Huone (tyyppi,numero,hinta) VALUES ('cheap', 111,122);
INSERT INTO Huone (tyyppi,numero,hinta) VALUES ('cheap', 112122);
INSERT INTO Huone (tyyppi,numero,hinta) VALUES ('lux', 113,152);

//Add extra items that can be ordered

INSERT INTO Lisavarusteet (nimi) VALUES ('kahvinkeitin');
INSERT INTO Lisavarusteet (nimi) VALUES ('vauvansänky');
INSERT INTO Lisavarusteet (nimi) VALUES ('yövalo');

//Create reservations

INSERT INTO Varaus(aloitus,lopetus,asiakasnimi,asiakaspuh,asiakassposti) VALUES('2019-03-09','2019-03-23','Pehmis Nasse', 030219876,'me@heijd.com')
INSERT INTO HV( varaus_id, huone_numero) VALUES (1,111)
INSERT INTO VL( varaus_id, lisavarusteet_id  VALUES (1,2)

INSERT INTO Varaus(aloitus,lopetus,asiakasnimi,asiakaspuh,asiakassposti) VALUES('2019-04-09','2019-04-23','Pehmis Nasse', 030219876,'me@heijd.com')
INSERT INTO HV( varaus_id, huone_numero) VALUES (2,112)
INSERT INTO VL( varaus_id, lisavarusteet_id  VALUES (2,2)

INSERT INTO Varaus(aloitus,lopetus,asiakasnimi,asiakaspuh,asiakassposti) VALUES('2019-03-09','2019-03-23','Pehmis Puh', 0302876,'me8@heijd.com')
INSERT INTO HV( varaus_id, huone_numero) VALUES (3,113)
INSERT INTO VL( varaus_id, lisavarusteet_id  VALUES (3,1)

//List all rooms

.headers on
SELECT * FROM Huone

// List all reservations and info on the rooms and extra items

SELECT asiakasnimi, numero, tyyppi, hinta ,aloitus, lopetus FROM Varaus
JOIN HV on varaus.id= hv.varaus_id JOIN Huone ON Huone.numero = HV.huone_numero

// Delete reservation

DELETE FROM Varaus WHERE asiakasnimi =  ‘Pehmis Puh’
DELETE FROM HV WHERE varaus_id =3
DELETE FROM VL WHERE  varaus_id =3

//List most popular extra items

SELECT nimi AS Lisavarustenimi, COUNT(Vl.varaus_id) AS Varausmäärä FROM lisavarusteet
LEFT JOIN VL ON VL.lisavarusteet_id = lisavarusteet.id GROUP BY  nimi ORDER BY COUNT(Vl.varaus_id) DESC LIMIT 10

// List available rooms for specific time, type and price

SELECT HUONE.NUMERO,HUONE.TYYPPI,HUONE.HINTA FROM HUONE WHERE HUONE.NUMERO NOT IN (SELECT HUONE.NUMERO FROM HUONE
JOIN HV ON HUONE.NUMERO=HV.HUONE_NUMERO JOIN VARAUS ON HV.VARAUS_ID =VARAUS.ID WHERE (VARAUS.ALOITUS >= date('2019-03-09')
AND varaus.lopetus <= date('2019-03-23')) OR (Varaus.lopetus > date('2019-03-09') AND varaus.aloitus <= date('2019-03-23'))) AND huone.hinta <=122
AND huone.tyyppi ="cheap" order BY Huone.hinta DESC;

//Count number of free rooms for specific time, type and price

SELECT Count (HUONE.NUMERO) FROM HUONE WHERE HUONE.NUMERO NOT IN (SELECT HUONE.NUMERO FROM HUONE
JOIN HV ON HUONE.NUMERO=HV.HUONE_NUMERO JOIN VARAUS ON HV.VARAUS_ID =VARAUS.ID WHERE (VARAUS.ALOITUS >= date('2019-03-09')
AND varaus.lopetus <= date('2019-03-23')) OR (Varaus.lopetus > date('2019-03-09') AND varaus.aloitus <= date('2019-03-23')))
AND huone.hinta <=122 AND huone.tyyppi ="cheap" order BY Huone.hinta DESC;

//List reservations by starting time and all info about them

SELECT asiakasnimi, asiakassposti, aloitus, lopetus, julianday(lopetus)- julianday( aloitus) AS VarauksenKestopv,
COUNT(Lisavarusteet.nimi) AS Lisavarustamaara, COUNT(Huone.numero) AS Huoneidenmaara FROM Varaus LEFT JOIN
VL ON VL.varaus_id = varaus.id JOIN Lisavarusteet ON lisavarusteet.id = vl.lisavarusteet_id JOIN HV ON Varaus.id = HV.varaus_id
JOIN Huone ON huone.numero=hv.huone_numero GROUP BY aloitus ORDER BY aloitus

//Info on specific room(s) for a certain booking

SELECT numero AS Huonenumero, tyyppi, hinta FROM Huone join HV ON Huone.numero =HV.huone_numero  WHERE HV.Varaus_id= 2 ;


